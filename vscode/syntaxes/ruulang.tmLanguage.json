{
    "scopeName": "source.ruulang",
    "patterns": [{
        "include": "#expression"
    }],
    "repository": {
        "line-comment": {
            "begin": "//",
            "end": "$",
            "name": "comment.line.c"
        },

        "block-comment": {
            "begin": "/\\*",
            "end": "\\*/",
            "name": "comment.block.c"
        },

        "fragment": {
            "match": "(fragment)\\s+([a-zA-Z0-9-_]+)\\s*",
            "captures": {
                "1": {
                    "name": "keyword.control"
                },
                "2": {
                    "name": "other"
                }
            }
        },

        "for_entity": {
            "match": "(for)\\s+([a-zA-Z0-9-_]+)\\s*",
            "captures": {
                "1": {
                    "name": "keyword.control"
                },
                "2": {
                    "name": "other"
                }
            }
        },

        "entity": {
            "match": "(entity)\\s+([a-zA-Z0-9-_]+)\\s*",
            "captures": {
                "1": {
                    "name": "keyword.control"
                },
                "2": {
                    "name": "other"
                }
            }
        },

        "relationship": {
            "match": "(->)\\s*([a-zA-Z0-9-_]+)(;)",
            "captures": {
                "1": {
                    "name": "keyword.operator.arrow"
                },
                "2": {
                    "name": "entity.name.destination"
                },
                "3": {
                    "name": "punctuation.terminator"
                }
            }
        },

        "entrypoint": {
            "match": "(@[a-zA-Z0-9-_]+)\\s*",
            "captures": {
                "1": {
                    "name": "keyword.control"
                }
            }
        },

        "grant": {
            "match": "([a-zA-Z0-9-_\\.]+)(;)",
            "captures": {
                "1": {
                    "name": "string"
                },
                "2": {
                    "name": "punctuation.terminator"
                }
            }
        },

        "include-fragment": {
            "match": "(#[a-zA-Z0-9-_]+)(;)",
            "captures": {
                "1": {
                    "name": "entity.name.fragment"
                },
                "2": {
                    "name": "punctuation.terminator"
                }
            }
        },

        "attribute": {
            "patterns": [{
                    "include": "#attribute-noarg"
                },
                {
                    "include": "#attribute-arg"
                }
            ]
        },

        "attribute-noarg": {
            "match": "(:[a-zA-Z0-9-_]+)\\s*(?![a-zA-Z0-9-_\\(])",
            "name": "entity.other.attribute-name"
        },

        "attribute-arg": {
            "begin": "(:[a-zA-Z0-9-_]+)(\\()",
            "end": "(\\))",
            "beginCaptures": {
                "1": {
                    "name": "entity.other.attribute-name"
                },
                "2": {
                    "name": "punctuation.paren.open"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "punctuation.paren.close"
                }
            },
            "patterns": [{
                "include": "#attribute-argument"
            }]
        },

        "attribute-argument": {
            "match": "([a-zA-Z0-9-_]+)",
            "name": "support.type.property-name"
        },

        "rule-group": {
            "begin": "\\{",
            "end": "\\}",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.brace.open"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.brace.close"
                }
            },
            "patterns": [{
                "include": "#expression"
            }]
        },

        "universal": {
            "match": "(\\*)",
            "name": "keyword.control"
        },

        "expression": {
            "patterns": [
                {
                    "include": "#fragment"
                },
                {
                    "include": "#for_entity"
                },
                {
                    "include": "#entrypoint"
                },
                {
                    "include": "#rule-group"
                },
                {
                    "include": "#universal"
                },
                {
                    "include": "#grant"
                },
                {
                    "include": "#entity"
                },
                {
                    "include": "#relationship"
                },
                {
                    "include": "#include-fragment"
                },
                {
                    "include": "#line-comment"
                },
                {
                    "include": "#block-comment"
                },
                {
                    "include": "#attribute"
                }
            ]
        }
    }
}